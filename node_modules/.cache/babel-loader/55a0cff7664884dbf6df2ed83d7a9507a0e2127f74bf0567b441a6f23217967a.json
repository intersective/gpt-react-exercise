{"ast":null,"code":"var _jsxFileName = \"/Users/Terence/Sites/gpt-react-exercise/gpt-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Grid, Paper, Container } from '@mui/material';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMAGES = {\n  'my badges': ['https://via.placeholder.com/150/FF0000/FFFFFF?text=Badge1', 'https://via.placeholder.com/150/00FF00/FFFFFF?text=Badge2', 'https://via.placeholder.com/150/0000FF/FFFFFF?text=Badge3'],\n  'my cert': ['https://via.placeholder.com/150/FFFF00/FFFFFF?text=Cert1', 'https://via.placeholder.com/150/FF00FF/FFFFFF?text=Cert2', 'https://via.placeholder.com/150/00FFFF/FFFFFF?text=Cert3'],\n  'my data': ['https://via.placeholder.com/150/F0F0F0/000000?text=Data1', 'https://via.placeholder.com/150/0F0F0F/FFFFFF?text=Data2', 'https://via.placeholder.com/150/333333/FFFFFF?text=Data3']\n};\nfunction App() {\n  _s();\n  const [selectedMenu, setSelectedMenu] = useState('my badges');\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleMenuClick = menu => {\n    setSelectedMenu(menu);\n    setSelectedImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      children: Object.keys(IMAGES).map(menu => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleMenuClick(menu),\n          children: menu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, menu, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), selectedImage ? /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '16px',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Selected\",\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      style: {\n        marginTop: '20px'\n      },\n      children: IMAGES[selectedMenu].map(image => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: selectedMenu,\n            style: {\n              width: '100%',\n              cursor: 'pointer'\n            },\n            onClick: () => setSelectedImage(image)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, image, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DKCIgYzG2jT0DRdiVA5RtJ+xf4E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Grid","Paper","Container","jsxDEV","_jsxDEV","IMAGES","App","_s","selectedMenu","setSelectedMenu","selectedImage","setSelectedImage","handleMenuClick","menu","maxWidth","children","container","spacing","justifyContent","Object","keys","map","item","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","elevation","style","padding","marginTop","src","alt","width","image","xs","sm","md","cursor","_c","$RefreshReg$"],"sources":["/Users/Terence/Sites/gpt-react-exercise/gpt-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Grid, Paper, Container } from '@mui/material';\nimport './App.css';\n\nconst IMAGES = {\n  'my badges': [\n    'https://via.placeholder.com/150/FF0000/FFFFFF?text=Badge1',\n    'https://via.placeholder.com/150/00FF00/FFFFFF?text=Badge2',\n    'https://via.placeholder.com/150/0000FF/FFFFFF?text=Badge3'\n  ],\n  'my cert': [\n    'https://via.placeholder.com/150/FFFF00/FFFFFF?text=Cert1',\n    'https://via.placeholder.com/150/FF00FF/FFFFFF?text=Cert2',\n    'https://via.placeholder.com/150/00FFFF/FFFFFF?text=Cert3'\n  ],\n  'my data': [\n    'https://via.placeholder.com/150/F0F0F0/000000?text=Data1',\n    'https://via.placeholder.com/150/0F0F0F/FFFFFF?text=Data2',\n    'https://via.placeholder.com/150/333333/FFFFFF?text=Data3'\n  ]\n}\n\nfunction App() {\n  const [selectedMenu, setSelectedMenu] = useState('my badges');\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleMenuClick = (menu) => {\n    setSelectedMenu(menu);\n    setSelectedImage(null);\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={2} justifyContent=\"center\">\n        {Object.keys(IMAGES).map(menu => (\n          <Grid item key={menu}>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleMenuClick(menu)}>\n              {menu}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n\n      {selectedImage ? (\n        <Paper elevation={3} style={{ padding: '16px', marginTop: '20px' }}>\n          <img src={selectedImage} alt=\"Selected\" style={{ width: '100%' }} />\n          {/* ... rest of the details ... */}\n        </Paper>\n      ) : (\n        <Grid container spacing={2} justifyContent=\"center\" style={{ marginTop: '20px' }}>\n          {IMAGES[selectedMenu].map(image => (\n            <Grid item key={image} xs={12} sm={6} md={4}>\n              <Paper elevation={3}>\n                <img src={image} alt={selectedMenu} style={{ width: '100%', cursor: 'pointer' }} onClick={() => setSelectedImage(image)} />\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}