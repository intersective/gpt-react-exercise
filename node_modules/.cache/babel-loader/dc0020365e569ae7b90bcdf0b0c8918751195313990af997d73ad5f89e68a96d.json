{"ast":null,"code":"var _jsxFileName = \"/Users/chaw/Workspaces/www/intersective/my-badge/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MenuBar from './components/DesktopView/MenuBar';\nimport ImageView from './components/DesktopView/ImageView';\nimport MobileList from './components/MobileView/MobileList';\nimport EditScreen from './components/EditMode/EditScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Sample data\n  const [data, setData] = useState([\n    // Fill this with your data structure, like images, titles, etc.\n  ]);\n\n  // Handlers for each functionality (filtering images, handling clicks, etc.)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: window.innerWidth > 768 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar /* Pass required props */, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageView /* Pass required props */, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(MobileList /* Pass required props */, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SQTkHv8LfdcPkLCuViSYTd/G44o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MenuBar","ImageView","MobileList","EditScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","className","children","window","innerWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chaw/Workspaces/www/intersective/my-badge/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MenuBar from './components/DesktopView/MenuBar';\nimport ImageView from './components/DesktopView/ImageView';\nimport MobileList from './components/MobileView/MobileList';\nimport EditScreen from './components/EditMode/EditScreen';\n\nfunction App() {\n  // Sample data\n  const [data, setData] = useState([\n    // Fill this with your data structure, like images, titles, etc.\n  ]);\n\n  // Handlers for each functionality (filtering images, handling clicks, etc.)\n\n  return (\n    <div className=\"App\">\n      {/* Check screen width to conditionally render components. This is a basic example; you should use CSS or a library like `react-responsive` for better handling. */}\n      {window.innerWidth > 768 ? (\n        <>\n          <MenuBar /* Pass required props */ />\n          <ImageView /* Pass required props */ />\n        </>\n      ) : (\n        <MobileList /* Pass required props */ />\n      )}\n\n      {/* Render EditScreen if an image is selected. */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,SAAS,MAAM,oCAAoC;AAC1D,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,UAAU,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAC/B;EAAA,CACD,CAAC;;EAEF;;EAEA,oBACEM,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,EAEjBC,MAAM,CAACC,UAAU,GAAG,GAAG,gBACtBV,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACER,OAAA,CAACL,OAAO,CAAC;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CAAC,eACrCd,OAAA,CAACJ,SAAS,CAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CAAC;IAAA,eACvC,CAAC,gBAEHd,OAAA,CAACH,UAAU,CAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2B;EACxC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGE,CAAC;AAEV;AAACV,EAAA,CAvBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}